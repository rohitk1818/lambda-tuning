import * as ssm from 'aws-cdk-lib/aws-ssm';
import * as iam from 'aws-cdk-lib/aws-iam';

const automationRole = new iam.Role(this, 'AutomationExecutionRole', {
  assumedBy: new iam.ServicePrincipal('ssm.amazonaws.com'),
  managedPolicies: [
    iam.ManagedPolicy.fromAwsManagedPolicyName('AmazonSSMAutomationRole'),
  ],
});

automationRole.addToPolicy(new iam.PolicyStatement({
  actions: ['states:StartExecution'],
  resources: ['*'], // Optional: scope to specific stateMachineArn
}));

const documentContent = {
  schemaVersion: '0.3',
  description: 'Trigger Lambda Power Tuning Step Function',
  assumeRole: '{{ AutomationAssumeRole }}',
  parameters: {
    AutomationAssumeRole: {
      type: 'String',
      description: 'IAM role to assume',
    },
    StateMachineArn: {
      type: 'String',
      description: 'ARN of the Step Function to invoke',
    },
    InputPayload: {
      type: 'StringMap',
      default: {
        lambdaARN: 'arn:aws:lambda:<region>:<account>:function:TestLambda',
        powerValues: '[128,256,512]',
        num: '5',
        strategy: 'cost'
      },
    },
  },
  mainSteps: [
    {
      name: 'startStepFunction',
      action: 'aws:executeStepFunction',
      inputs: {
        StateMachineArn: '{{ StateMachineArn }}',
        Input: '{{ InputPayload }}',
      },
    },
  ],
};

const runbook = new ssm.CfnDocument(this, 'PowerTuningRunbook', {
  name: 'InvokeLambdaPowerTuner',
  content: documentContent,
  documentType: 'Automation',
  documentFormat: 'JSON',
});
